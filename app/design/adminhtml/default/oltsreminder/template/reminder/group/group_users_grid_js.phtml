<?php
/**
 * @category    Olts
 * @package     Olts_Reminder
 * @author      Olena Tsareva <olts@ciklum.com>
 * @license    http://opensource.org/licenses/osl-3.0.php  Open Software License (OSL 3.0)
 */
?>
<script type="text/javascript">
    <!--
    <?php $myBlock = $this->getLayout()->getBlock('group_users_grid'); ?>
    <?php if( is_object($myBlock) && $myBlock->getJsObjectName() ): ?>
    var checkBoxes = $H(<?php echo $myBlock->_getUsers(true) ?>);
    var warning = false;
    if (checkBoxes.size() > 0) {
        warning = true;
    }
    $('in_group_user').value = checkBoxes.toQueryString();

    function registerUserGroup(grid, element, checked) {
        if (checked) {
            checkBoxes.set(element.value, 0);
        } else {
            checkBoxes.unset(element.value);
        }
        $('in_group_user').value = checkBoxes.toQueryString();
        grid.reloadParams = {'in_group_user[]': checkBoxes.keys()};
    }

    function groupUsersRowClick(grid, event) {
        var trElement = Event.findElement(event, 'tr');
        var isInput = Event.element(event).tagName == 'INPUT';
        if (trElement) {
            var checkbox = Element.getElementsBySelector(trElement, 'input');
            if (checkbox[0]) {
                var checked = isInput ? !checkbox[0].checked : checkbox[0].checked;
                if (checked) {
                    if (confirm('<?php echo Mage::helper('core')->jsQuoteEscape($this->__('Warning!\r\nThis action will remove this user from already assigned group\r\nAre you sure?')) ?>')) {
                        checkbox[0].checked = false;
                        checkBoxes.unset(checkbox[0].value);
                        varienElementMethods.setHasChanges(checkbox[0]);
                    } else {
                        checkbox[0].checked = true;
                    }
                } else {
                    checkbox[0].checked = true;
                    checkBoxes.set(checkbox[0].value, true);
                }

                $('in_group_user').value = checkBoxes.toQueryString();
                grid.reloadParams = {'in_group_user[]': checkBoxes.keys()};
            }
        }
    }

    function groupUsersRowInit(grid, row) {
        var checkbox = $(row).getElementsByClassName('checkbox')[0];
        if (checkbox) {
            if (checkbox.checked) {
                checkBoxes.set(checkbox.value, checkbox.checked);
            } else {
                checkBoxes.unset(checkbox.value);
            }

            $('in_group_user').value = checkBoxes.toQueryString();
            grid.reloadParams = {'in_group_user[]': checkBoxes.keys()};
        }
    }

    function massSelectUsers(allCheckbox) {
        if (!allCheckbox.checked && checkBoxes.size() > 0) {
            if (!confirm('<?php echo Mage::helper('core')->jsQuoteEscape($this->__('Warning!\r\nThis action will remove those users from already assigned group\r\nAre you sure?')) ?>')) {
                allCheckbox.checked = false;
                return false;
            }
        }
        <?php echo $myBlock->getJsObjectName() ?>.
        rows.each(function (row) {
            $(row).getElementsByClassName('checkbox')[0].checked = allCheckbox.checked;
            groupUsersRowInit(<?php echo $myBlock->getJsObjectName() ?>, row);
        });
    }

    <?php echo $myBlock->getJsObjectName() ?>.rowClickCallback = groupUsersRowClick;
    <?php echo $myBlock->getJsObjectName() ?>.initRowCallback = groupUsersRowInit;
    <?php echo $myBlock->getJsObjectName() ?>.checkboxCheckCallback = registerUserGroup;
    <?php echo $myBlock->getJsObjectName() ?>.checkCheckboxes = massSelectUsers;
    <?php echo $myBlock->getJsObjectName() ?>.rows.each(function (row) {
        groupUsersRowInit(<?php echo $myBlock->getJsObjectName() ?>, row)
    });
    $('in_group_user_old').value = $('in_group_user').value;
    <?php endif; ?>
    //-->
</script>
